/*
 * Copyright [2016] Shawn Crain
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'groovy'
    id 'codenarc'
    id 'idea'
    id 'maven-publish'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.9.4'
    id 'net.saliman.cobertura' version '2.3.2'
    id "com.github.kt3k.coveralls" version "2.6.3"
}

group = 'com.scrain.gradle'

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

ext {
    groovyRelease = GroovySystem.version.replaceAll(/\.\d+$/,'') // major.minor portion only
}

repositories {
    jcenter()
}

dependencies {
    compile localGroovy()
    compile gradleApi()

    testCompile("org.spockframework:spock-core:1.0-groovy-${groovyRelease}") {
        exclude group: 'org.codehaus.groovy'
    }
}

gradlePlugin {
    plugins {
        checksumPlugin {
            id = 'com.scrain.checksum-plugin'
            implementationClass = 'com.scrain.gradle.ChecksumPlugin'
        }
    }
}

pluginBundle {
    website = 'https://plugins.gradle.org/plugin/com.scrain.checksum-plugin'
    vcsUrl = 'https://github.com/scrain/gradle-checksum-plugin'
    description = 'Greetings from here!'
    tags = ['greetings', 'salutations']

    plugins {
        checksumPlugin {
            id = 'com.scrain.checksum-plugin'
            displayName = 'Checksum Plugin'
        }
    }
}

codenarcMain {
    configFile = file('gradle/codenarcMain.groovy')
}

codenarcTest {
    configFile = file('gradle/codenarcTest.groovy')
}

codenarc {
}

cobertura {
    coverageFormats = ['html', 'xml']
    coverageIgnoreTrivial = true
}

check.dependsOn 'cobertura'
codenarcMain.dependsOn 'cobertura' // required for CrapMetric rules

task checkNoDaemon() {
    doLast {
        if ( System.properties.'sun.java.command'.contains('launcher.daemon') ) {
            throw new GradleException("Cobertura cannot be run under the gradle daemon for this project due to: https://github.com/stevesaliman/gradle-cobertura-plugin/issues/89  Please add --no-daemon flag.")
        }
    }
}

project.tasks['cobertura'].dependsOn checkNoDaemon
clean.shouldRunAfter checkNoDaemon
build.shouldRunAfter checkNoDaemon
test.shouldRunAfter checkNoDaemon
